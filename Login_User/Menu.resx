<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SkfH/1EsoC/vUQbsAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK2PFyKtixJwqosPIQAA
        AAD//wABrIwUWauLFFj//wABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsjBPbrIwToKyM
        E9kAAAAArI0TXKyMEs+sjBLQrIwUWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArIwT2ayM
        E6CsjBPYAAAAAK2LFFqsjBLPrIwS0KuLFFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK2M
        EWqsjBOzq4wTiauLE3esjBN4q4wUpquMFKStkhIcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKqO
        FSSsjBPprY0TiK2NE4itjROIrY0TiK2NE4isjBOtrYwTpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACtixJjrI0TpQAAAAAAAAAAAAAAAAAAAAAAAAAArYwQH6yME+n//wABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAArIwToq2MFGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsjBPXrI0VMQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKyME+SqjhUkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq40Uj6uME3oAAAAAAAAAAAAA
        AAAAAAAAAAAAAKqOFSSsjBPjrI0SYqyME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+tixPAAAAAAAAA
        AAAAAAAAAAAAAKuME2qtjBOkrYsToQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACsjRJyrIwSfqqOExsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAPjPAAD4zwAA/M8AAPgHAAD79wAA9/cAAPf3
        AAD0AwAA5/8AAP//AAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKyME7+sjBP/rIwT/6yME++sixR1AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////+Hw///A4H//zOZ//8zmf//A
        4H//4fD//+AA///AAH//z/5//5//P/+f/z//n/8//5//H/8//5//P/+f/yAAH/8gAA/+f///8H////D/
        ////////////////////////////////////////
</value>
  </data>
</root>