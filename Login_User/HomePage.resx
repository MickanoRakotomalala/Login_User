<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK2KETusjBP8rIwT/6yME/+rjBKMAAAAAAAA
        AACsixSNrIwT/6yME/+sjBP8q40SOgAAAAAAAAAAAAAAAAAAAACrjRJVrIwT/6yME/+sjBP/rYwUqgAA
        AAAAAAAArYwUqqyME/+sjBP/rIwT/6uNElUAAAAAAAAAAAAAAAAAAAAAq40SVayME/+sjBP/rIwT/62M
        FKoAAAAAAAAAAK2MFKqsjBP/rIwT/6yME/+rjRJVAAAAAAAAAAAAAAAAAAAAAKuNElWsjBP/rIwT/6yM
        E/+tjBSqAAAAAAAAAACtjBSqrIwT/6yME/+sjBP/q40SVQAAAAAAAAAAAAAAAAAAAACrjRJVrIwT/6yM
        E/+sjBP/rIwSwa2LE0StixNErIwSwayME/+sjBP/rIwT/6uNElUAAAAAAAAAAAAAAAAAAAAAq40SVayM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+rjRJVAAAAAAAAAACujBU8rYsT+6yM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yNE/qtjxY7AAAAAKyL
        FE2sjBP0rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/SrjRRMAAAAAAAA
        AAAAAAAAqowUM6yME+esjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME+eqjBQzAAAAAAAA
        AAAAAAAAAAAAAAAAAACtjBAfrIwT1ayME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME9WtjBAfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAK+PEBCsjBO+rIwT/6yME/+sjBP/rIwT/6yME76vjxAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn4AgCK2MFKqsjBP/rIwT/6yMFKmfgCAIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArYsSf6yMEn4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA4YcAAOGHAADhhwAA4YcAAOGHAADgBwAAgAEAAMAD
        AADgBwAA8A8AAPgfAAD8PwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        E/+sjBP/rIwT/6yME/+sjRKaAAAAAAAAAACrixRAq40T6KyME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yM
        E/+sjBP/rIwT/6yME/+sjBP/q40T6KuLFEAAAAAAAAAAAAAAAACujRQmrIwT3KyME/+sjBP/rIwT/6yM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME9ysihUlAAAAAAAAAAAAAAAAAAAAAAAAAACqkhgVrIwTx6yM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBPHqpIYFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACqjhwJrIsTrKyME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIsTrKqOHAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAgAACrI0TkayME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yNE5GAgAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArI0Ta6yME/ysjBP/rIwT/6yME/+sjBP/rIwT/6yM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/ysjRNrAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArIsUTayME/SsjBP/rIwT/6yM
        E/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP0rIsUTQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArI4UNKyM
        E+esjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT56yOFDQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAqo4VJKyME9usjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBP/rIwT/6yME9WvjxAgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAApowNFKyME8WsjBP/rIwT/6yME/+sjBP/rIwT/6yME/+sjBPFpowNFAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmZkABayME52sjBP/rIwT/6yME/+sjBP/rI0UnL+A
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKyME5StjBP+rYwT/qyN
        E5MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKyL
        ES6sixEuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////////8B+A/+AfgH/gH4B/4B+Af+AfgH/gH
        4B/4B+Af+AfgH/gH4B/4AAAf+AAAH/gAAB+AAAABwAAAA+AAAAfwAAAP+AAAH/wAAD//AAD//4AB///A
        A///4Af///AP///4H////D//////////////////
</value>
  </data>
</root>